*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

:root {
    --cell-size: 100px;
    --mark-size: calc(var(--cell-size) * .9);
}

html, body {
    font-family:'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: blanchedalmond;
    color:mediumseagreen;
    text-align: center;
}

.board {
    width: 100vw;
    height: 100vh;
    display: grid;
    gap: 3px;
    place-content: center;
    place-items: center;
    grid-template-columns: repeat(3, auto);
}

.cell {
    width: var(--cell-size);
    height: var(--cell-size);
    background-color: mediumseagreen;
    color: blanchedalmond;
    font-size: var(--mark-size);
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.cell.x,
.cell.o {
    cursor: not-allowed;
}

.winning-message {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .9);
    flex-direction: column;
    gap: 1rem;
    justify-content: center;
    align-items: center;
    color: mediumseagreen;
    font-size: 5rem;
}

.winning-message button {
    font-size: 3rem;
    font-family: inherit;
    background-color: blanchedalmond;
    color: mediumseagreen;
    border: 1px solid mediumseagreen;
    padding: .75rem 1.5rem;
    border-radius: 1rem;
    cursor: pointer;
}

.winning-message button:hover {
    background-color: mediumseagreen;
    color: blanchedalmond;
    border: 1px solid blanchedalmond;
}

.winning-message.show {
    display: flex;
}






/*          PSEUDO CLASSES TO CREATE MARKS          */
/* establishing mark color */
.cell.x::before,
.cell.x::after,
.cell.o::before,
.cell.o::after {
    background-color: blanchedalmond;
}

/* new color hover over cells that aren't taken */
.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after,
.board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
    background-color:rgb(77, 247, 154);
}




/* x's */

.cell.x::before,
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::before,
.board.x .cell:not(.x):not(.o):hover::after {
    content: '';
    width: calc(var(--mark-size) * .20);
    height: var(--mark-size);
    position: absolute;
}
.cell.x::before,
.board.x .cell:not(.x):not(.o):hover::before {
    transform: rotate(45deg);
}
.cell.x::after,
.board.x .cell:not(.x):not(.o):hover::after  {
    transform: rotate(-45deg);
}



/* o's */

.cell.o::before,
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::before,
.board.o .cell:not(.x):not(.o):hover::after {
    content: '';
    border-radius: 50%;
    position: absolute;
}
.cell.o::before,
.board.o .cell:not(.x):not(.o):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}
.cell.o::after,
.board.o .cell:not(.x):not(.o):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color:mediumseagreen;
}